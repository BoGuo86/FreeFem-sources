diff --git a/petsc-3.11.2/config/BuildSystem/config/packages/slepc.py b/petsc-3.11.2/config/BuildSystem/config/packages/slepc.py
index ddc7575449..bfa062a932 100644
--- a/petsc-3.11.2/config/BuildSystem/config/packages/slepc.py
+++ b/petsc-3.11.2/config/BuildSystem/config/packages/slepc.py
@@ -23,6 +23,8 @@ class Configure(config.package.Package):
     self.setCompilers    = framework.require('config.setCompilers',self)
     self.sharedLibraries = framework.require('PETSc.options.sharedLibraries', self)
     self.installdir      = framework.require('PETSc.options.installDir',self)
+    self.parch           = framework.require('PETSc.options.arch',self)
+    self.scalartypes     = framework.require('PETSc.options.scalarTypes',self)
     return
 
   def Install(self):
@@ -36,8 +38,11 @@ class Configure(config.package.Package):
 
     # if installing prefix location then need to set new value for PETSC_DIR/PETSC_ARCH
     if self.argDB['prefix']:
+       iarch = 'installed-'+self.parch.nativeArch
+       if self.scalartypes.scalartype != 'real':
+         iarch += '-' + self.scalartypes.scalartype
        carg = 'SLEPC_DIR='+self.packageDir+' PETSC_DIR='+os.path.abspath(os.path.expanduser(self.argDB['prefix']))+' PETSC_ARCH="" '
-       barg = 'SLEPC_DIR='+self.packageDir+' PETSC_DIR='+os.path.abspath(os.path.expanduser(self.argDB['prefix']))+' PETSC_ARCH=installed-'+self.arch+' '
+       barg = 'SLEPC_DIR='+self.packageDir+' PETSC_DIR='+os.path.abspath(os.path.expanduser(self.argDB['prefix']))+' PETSC_ARCH='+iarch+' '
        prefix = os.path.abspath(os.path.expanduser(self.argDB['prefix']))
     else:
        carg = ' SLEPC_DIR='+self.packageDir+' '
diff --git a/petsc-3.11.2/config/PETSc/options/arch.py b/petsc-3.11.2/config/PETSc/options/arch.py
index dfb567417e..9030f507c5 100644
--- a/petsc-3.11.2/config/PETSc/options/arch.py
+++ b/petsc-3.11.2/config/PETSc/options/arch.py
@@ -22,7 +22,7 @@ class Configure(config.base.Configure):
     help.addArgument('PETSc', '-with-petsc-arch=<string>',nargs.Arg(None, None, 'The configuration name'))
     return
 
-  def createArchitecture(self):
+  def setNativeArchitecture(self):
     import sys
     arch = 'arch-' + sys.platform.replace('cygwin','mswin')
     # use opt/debug, c/c++ tags.s
@@ -31,7 +31,8 @@ class Configure(config.base.Configure):
       arch += '-debug'
     else:
       arch += '-opt'
-    return arch
+    self.nativeArch = arch
+    return
 
   def configureArchitecture(self):
     '''Checks PETSC_ARCH and sets if not set'''
@@ -51,7 +52,7 @@ Warning: Using from command-line or name of script: %s, ignoring environment: %s
       self.arch = os.environ['PETSC_ARCH']
       msg = 'environment variable PETSC_ARCH='+str(self.arch)
     else:
-      self.arch = self.createArchitecture()
+      self.arch = self.nativeArch
     if self.arch.find('/') >= 0 or self.arch.find('\\') >= 0:
       raise RuntimeError('PETSC_ARCH should not contain path characters, but you have specified with '+msg)
     if self.arch.startswith('-'):
@@ -64,6 +65,7 @@ Warning: Using from command-line or name of script: %s, ignoring environment: %s
     return
 
   def configure(self):
+    self.executeTest(self.setNativeArchitecture)
     self.executeTest(self.configureArchitecture)
     # required by top-level configure.py
     self.framework.arch = self.arch
