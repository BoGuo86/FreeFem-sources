load "msh3"
load "Element_P3"
include "test.idp"

cout << "dz" << endl;
real t;
mesh3 Th = cube(4, 4, 4);
fespace Uh(Th, P2);
Uh u, du;
Uh dxerr;

u = x;
t = clock();
du = dz(u);
t = clock() - t;
cout << IND << t << endl;
test(du[].min < HWERROR);
test(du[].max < HWERROR);

t = clock();
du = dz(u);
t = clock() - t;
cout << IND << t << endl;
test(du[].min < HWERROR);
test(du[].max < HWERROR);

Uh uu = x*y + x + y + 1;

t = clock();
du = dz(uu);
t = clock() - t;
cout << IND << t << endl;
Uh dxerror = du - (z+1);
test(dxerror[].min < HWERROR);
test(dxerror[].max < HWERROR);

mesh3 Th3D = cube(4, 4, 4);

fespace Uh3(Th3D, P3);  //P3 because following u3 in an order 3 polynome
Uh3 u3, du3, duerr;

u3 = x*y*z + x*y + x*z + y*z + x + y + z + 1;

t = clock();
du3 = dz(u3);
t = clock() - t;
cout << IND << t << endl;
duerr = du3 - (x*y+x+y+1);
plot(duerr);
test(duerr[].max < HWERROR);
test(duerr[].min < HWERROR);

// Test multiple finite elements
