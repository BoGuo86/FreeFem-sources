include "test.idp"
load "BEC"

real t;
real[int, int] i = [[1, 2, 3], [1, 2, 3], [1, 2, 3]];

cout << functionDEFINITION << "BECtrap" << endl;

real[int] j = [0, 0, 0, 0];
real[int] k = [0, 0, 0, 0, 0, 0];

t = clock();
BECtrap(j);
t = clock() - t;
cout << timeELAPSED << t << endl;
t = clock();
BECtrap(k);
t = clock() - t;
cout << timeELAPSED << t << endl;

cout << functionDEFINITION << "GPvortex" << endl;
{
  t = clock();
  complex vortex = GPvortex(4, 2, 6);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  cout << vortex << endl;
}

cout << functionDEFINITION << "GPvortices" << endl;
{
  t = clock();
  complex vortex = GPvortices(i);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  cout << vortex << endl;
}

cout << functionDEFINITION << "dxGPvortex" << endl;
{
  t = clock();
  complex vortex = dxGPvortex(4, 2, 6);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  cout << vortex << endl;
}

cout << functionDEFINITION << "dyGPvortex" << endl;
{
  t = clock();
  complex vortex = dyGPvortex(4, 2, 6);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  cout << vortex << endl;
}
