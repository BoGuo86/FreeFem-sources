load "msh3"
load "Element_P3"
include "test.idp"

cout << "dzz" << endl;
real t;
mesh3 Th = cube(4, 4, 4);
fespace Uh(Th, P2);
Uh u, du;
Uh dxerr;

u = x;
t = clock();
du = dzz(u);
t = clock() - t;
cout << IND << t << endl;
test(du[].min < HWERROR);
test(du[].max < HWERROR);

u = y;
t = clock();
du = dzz(u);
t = clock() - t;
cout << IND << t << endl;
test(du[].min < HWERROR);
test(du[].max < HWERROR);

u = z;
t = clock();
du = dzz(u);
t = clock() - t;
cout << IND << t << endl;
test(du[].min < HWERROR);
test(du[].max < HWERROR);

Uh uu = x*y + x + y + 1;

t = clock();
du = dzz(uu);
t = clock() - t;
cout << IND << t << endl;
Uh dxerror = du - 0;
test(dxerror[].min < HWERROR);
test(dxerror[].max < HWERROR);

Uh u3 = x*y*z + x*y + x*z + y*z + x + y + z + 1;

t = clock();
Uh dxu3 = dzz(u3);
t = clock() - t;
cout << IND << t << endl;
Uh duerror = dxu3 - 0;
test(duerror[].max == 0);
test(duerror[].min == 0);
