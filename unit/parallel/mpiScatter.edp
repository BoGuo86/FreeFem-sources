//NBPROC 4
assert(mpisize == 4);
include "test.idp"

real t;
cout << "mpiScatter" << endl;

cout << IND << "int[int]" << endl;
int[int] a(mpisize), b(mpisize);
if (!mpirank)
	for [i, ai:a]
		ai = i+1;

t = mpiWtime();
mpiScatter(a, b(mpirank), processor(0));
t = mpiWtime() - t;
cout << IND << IND << t << endl;

for (int i = 0; i < mpisize; i++)
	if (mpirank == i)
		test(b[i] == i + 1);


cout << IND << "real[int]" << endl;
real[int] ar(mpisize), br(mpisize);
if (!mpirank)
	for [i, ai:ar]
		ai = i+1;

t = mpiWtime();
mpiScatter(ar, br(mpirank), processor(0));
t = mpiWtime() - t;
cout << IND << IND << t << endl;

for (int i = 0; i < mpisize; i++)
	if (mpirank == i)
		test(br[i] == i + 1);


cout << IND << "complex[int]" << endl;
complex[int] ac(mpisize), bc(mpisize);
if (!mpirank)
	for [i, ai:ac]
		ai = i+1;

t = mpiWtime();
mpiScatter(ac, bc, processor(0));
t = mpiWtime() - t;
cout << IND << IND << t << endl;

// for (int i = 0; i < mpisize; i++)
// 	if (mpirank == i) {
// 		// test(bc[i] == i + 1);
// 	}
// test(bc[mpirank] == mpirank);
cout << "ac" << ac << endl;
cout << "bc" << bc << endl;
