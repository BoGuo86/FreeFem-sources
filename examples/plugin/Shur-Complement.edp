load "lapack"
load "Shur-Complement"
include "ExtractDofsonBorder.idp"
macro grad(u) [dx(u),dy(u)] //
real hsize= 0.1; 
mesh Th=square(2/hsize,1/hsize,[x*2,y]);
Th=trunc(Th,(abs(x-1)>3*hsize)||(abs(y-0.45)>hsize/2),label=10);
plot(Th,wait=1);
fespace Vh(Th,P1);
int n = Vh.ndof;
varf va(u,v) = int2d(Th)(grad(u)'*grad(v))+on(1,3,4,u=0);

 matrix A= va(Vh,Vh,sym=0,tgv=-2);
if(verbosity>9) cout << A << endl; 
int[int] I; 
ExtractDofsonBorder(2,Vh,I,1);
if(verbosity>9)cout << "I = "<< I << endl; 
real[int,int] S(I.n,I.n);
int ns=ShurComplement(S,A,I);
cout << ns <<" " << S << endl; 
real[int,int] F(n,n);
copy(F,A);
real[int,int] SF(I.n,I.n);
verbosity=1;
if(verbosity>9) cout << F << endl; 
 ns=ShurComplement(SF,F,I);

cout << " SF = " << SF << endl;